Code-1
//Pointers
#include<bits/stdc++.h>
using namespace std;
int main()
{
int a = 10;
int *p1 = &a;
int **p2=&p1;
int ***p3=&p2;
cout<<a<<endl;
cout<<p1<<endl;
cout<<p2<<endl;
cout<<p3<<endl;

return 0;
}

Code-2
//Pointers
#include<bits/stdc++.h>
using namespace std;
int main()
{
int a = 10;
int *p1 = &a;
int **p2=&p1;//Pointer to Pointer
int ***p3=&p2;
cout<<a<<endl;
cout<<*p1<<endl;
***p3=50;
cout<<**p2<<endl;
cout<<***p3<<endl;

return 0;
}
Code-3
#include<bits/stdc++.h>
using namespace std;
int main()
{
void *ptr;//void pointer declaration
int a=9;
ptr=&a;//storing the address of a variable in a void pointer variable
int *pt=null;//Null Pointer
std::cout<<&a<<std::endl;
std::cout<<ptr<<std::endl;
std::cout<<pt<<std::endl;// null pointer print nothing
return 0;
}

Code-4
#include<bits/stdc++.h>
using namespace std;
int main()
{
int *ptr;//wild pointer that point to arbitary memory location which is being corrupted
ptr=12;
}
